[2018-02-23 17:47:40,332/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@35bbe5e8: startup date [Fri Feb 23 17:47:40 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-23 17:47:40,426/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,318/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/handler-bizkeeper/0.5.0/handler-bizkeeper-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,365/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,709/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,725/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,740/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,756/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:41,772/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-23 17:47:42,116/GMT+08:00][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'io.servicecomb.config.ConfigurationSpringInitializer#0' defined in URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [io.servicecomb.config.ConfigurationSpringInitializer]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: com/netflix/config/WatchedConfigurationSource org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2018-02-24 11:06:59,849/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 11:06:59,907/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19dfb72a: startup date [Sat Feb 24 11:06:59 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 11:06:59,994/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:00,316/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/handler-bizkeeper/0.5.0/handler-bizkeeper-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:00,346/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:00,996/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:01,013/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:01,046/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:01,076/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:01,088/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:07:01,412/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 11:07:01,413/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 11:07:01,421/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 11:07:01,498/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 11:07:01,500/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 11:07:01,515/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 11:07:01,895/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 11:07:02,150/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:07:02,151/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:07:02,532/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:07:02,618/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 11:07:02,632/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 11:07:02,664/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 11:07:02,722/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 11:07:02,818/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 11:07:03,245/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 11:07:03,346/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 11:07:03,348/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 11:07:03,356/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 11:07:03,357/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 11:07:03,377/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 11:07:03,382/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 11:07:03,416/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 11:07:03,420/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 11:07:03,841/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 11:07:03,862/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 11:07:03,870/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 11:07:03,871/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 11:07:03,873/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:07:03,886/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:07:04,178/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:04,188/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:04,190/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:07:04,191/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:07:04,202/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:04,204/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:04,226/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:04,227/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:04,228/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:07:04,229/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:07:04,231/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:04,232/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:04,232/GMT+08:00][main][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:07:04,236/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:07:34,524/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 11:07:34,525/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:07:34,530/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:34,531/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:34,532/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:07:34,533/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:07:34,538/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:34,540/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:34,543/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:34,544/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:34,545/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:07:34,545/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:07:34,548/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:07:34,550/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:07:34,551/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:07:34,552/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:08:04,687/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:08:04,691/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:04,692/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:04,693/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:08:04,693/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:08:04,696/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:04,698/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:04,700/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:04,702/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:04,702/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:08:04,703/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:08:04,705/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:04,707/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:04,707/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:08:04,709/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:08:34,790/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:08:34,794/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:34,795/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:34,795/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:08:34,796/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:08:34,799/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:34,800/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:34,802/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:34,806/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:34,807/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:08:34,808/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:08:34,811/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. io.netty.util.internal.logging.Slf4JLogger.warn(Slf4JLogger.java:151)
io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e31203430302042616420526571756573740d0a436f6e74656e742d547970653a20746578742f706c61696e3b20636861727365743d7574662d380d0a436f6e6e656374696f6e3a20636c6f73650d0a0d0a343030204261642052657175657374
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:911)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:08:34,813/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Failed to create SSL connection io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:08:34,814/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:08:34,814/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:08:52,892/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 11:08:52,946/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19dfb72a: startup date [Sat Feb 24 11:08:52 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 11:08:53,022/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:53,319/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/handler-bizkeeper/0.5.0/handler-bizkeeper-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:53,354/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:54,066/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:54,085/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:54,097/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:54,109/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:54,140/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:08:54,472/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 11:08:54,474/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 11:08:54,482/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 11:08:54,553/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 11:08:54,555/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 11:08:54,567/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 11:08:55,026/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 11:08:55,260/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:08:55,261/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:08:55,619/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:08:55,702/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 11:08:55,717/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 11:08:55,749/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 11:08:55,807/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 11:08:55,898/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 11:08:56,298/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 11:08:56,385/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 11:08:56,386/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 11:08:56,394/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 11:08:56,396/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 11:08:56,415/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 11:08:56,419/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 11:08:56,452/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 11:08:56,457/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 11:08:59,411/GMT+08:00][vertx-blocked-thread-checker][WARN]Thread Thread[transport-vert.x-eventloop-thread-0,5,main] has been blocked for 2965 ms, time limit is 2000 io.vertx.core.impl.BlockedThreadChecker$1.run(BlockedThreadChecker.java:53)
[2018-02-24 11:09:00,979/GMT+08:00][vertx-blocked-thread-checker][WARN]Thread Thread[transport-vert.x-eventloop-thread-0,5,main] has been blocked for 4530 ms, time limit is 2000 io.vertx.core.impl.BlockedThreadChecker$1.run(BlockedThreadChecker.java:53)
[2018-02-24 11:09:01,227/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 11:09:01,247/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 11:09:01,255/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 11:09:01,257/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 11:09:01,258/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:09:01,270/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:09:01,629/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]{"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"Service does not exist."}
 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:112)
[2018-02-24 11:09:01,710/GMT+08:00][main][INFO]Registry Microservice successfully. id=1031a8ae191011e8b486286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:89)
[2018-02-24 11:09:01,716/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]{"errorCode":"400016","errorMessage":"Schema does not exist","detail":"Schema does not exist."}
 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:112)
[2018-02-24 11:09:01,717/GMT+08:00][main][INFO]schemaId catalogue exists false io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 11:09:01,726/GMT+08:00][main][INFO]register schema 1031a8ae191011e8b486286ed488d110/catalogue success. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:256)
[2018-02-24 11:09:01,728/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:09:01,730/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 11:09:01,755/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=1031a8ae191011e8b486286ed488d110 instanceId=103e6391191011e8b486286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 11:09:01,756/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:09:01,815/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 11:09:01,817/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice 1031a8ae191011e8b486286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 11:09:31,921/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 11:14:57,699/GMT+08:00][transport-vert.x-eventloop-thread-0][ERROR]locate path failed, status:Not Found, http method:GET, path:/, microserviceName:catalogue io.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:72)
[2018-02-24 11:14:58,158/GMT+08:00][transport-vert.x-eventloop-thread-0][ERROR]locate path failed, status:Not Found, http method:GET, path:/favicon.ico/, microserviceName:catalogue io.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:72)
[2018-02-24 11:17:00,181/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 11:17:00,235/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19dfb72a: startup date [Sat Feb 24 11:17:00 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 11:17:00,312/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:00,734/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/handler-bizkeeper/0.5.0/handler-bizkeeper-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:00,765/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:01,189/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:01,233/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:01,245/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:01,272/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:01,289/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:17:01,645/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 11:17:01,646/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 11:17:01,655/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 11:17:01,727/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 11:17:01,729/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 11:17:01,745/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 11:17:02,142/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 11:17:02,419/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:17:02,421/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:17:02,834/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:17:02,926/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 11:17:02,949/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 11:17:02,984/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 11:17:03,096/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 11:17:03,229/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 11:17:03,807/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 11:17:03,915/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 11:17:03,916/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 11:17:03,923/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 11:17:03,924/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 11:17:03,944/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 11:17:03,952/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 11:17:03,997/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 11:17:04,007/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 11:17:04,635/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 11:17:04,654/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 11:17:04,663/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 11:17:04,664/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 11:17:04,666/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:17:04,678/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:17:04,918/GMT+08:00][main][INFO]Microservice exists in service center, no need to register. id=1031a8ae191011e8b486286ed488d110 appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2018-02-24 11:17:04,931/GMT+08:00][main][INFO]SchemaIds is equals to service center. id=1031a8ae191011e8b486286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2018-02-24 11:17:04,937/GMT+08:00][main][INFO]schemaId catalogue exists true io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 11:17:04,940/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:17:04,941/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 11:17:04,959/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=1031a8ae191011e8b486286ed488d110 instanceId=103e6391191011e8b486286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 11:17:04,960/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:17:05,003/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 11:17:05,004/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice 1031a8ae191011e8b486286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 11:17:35,077/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 11:21:30,112/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher handle microservice 1031a8ae191011e8b486286ed488d110 response failed, watcher catch an err: server shutdown io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:493)
[2018-02-24 11:21:30,116/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, connection is closed accidentally io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:21:30,118/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :connection is closed accidentally io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:21:30,120/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]ws close error. io.servicecomb.serviceregistry.client.http.WebsocketUtils.lambda$null$1(WebsocketUtils.java:64)
java.lang.IllegalStateException: WebSocket is closed
	at io.vertx.core.http.impl.WebSocketImplBase.checkClosed(WebSocketImplBase.java:253)
	at io.vertx.core.http.impl.WebSocketImplBase.close(WebSocketImplBase.java:99)
	at io.servicecomb.serviceregistry.client.http.WebsocketUtils.lambda$null$1(WebsocketUtils.java:62)
	at io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:344)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:418)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:440)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:21:35,993/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:21:35,995/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:21:35,996/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:21:36,001/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:21:36,003/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:21:37,004/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:21:37,005/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:21:37,009/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:21:37,010/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:21:37,011/GMT+08:00][Service Center Task][WARN]sc task taken more than 2031ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:22:01,702/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 11:22:01,782/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19dfb72a: startup date [Sat Feb 24 11:22:01 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 11:22:01,876/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:02,377/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/handler-bizkeeper/0.5.0/handler-bizkeeper-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:02,404/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:03,006/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:03,019/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:03,032/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:03,044/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:03,055/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:22:03,421/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 11:22:03,423/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 11:22:03,431/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 11:22:03,506/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 11:22:03,508/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 11:22:03,522/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 11:22:03,984/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 11:22:04,240/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:22:04,242/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:22:04,681/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:22:04,779/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 11:22:04,801/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 11:22:04,845/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 11:22:04,996/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 11:22:05,149/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 11:22:05,846/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 11:22:05,937/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 11:22:05,939/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 11:22:05,948/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 11:22:05,949/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 11:22:05,975/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 11:22:05,982/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 11:22:06,030/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 11:22:06,040/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 11:22:06,688/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 11:22:06,712/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 11:22:06,720/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 11:22:06,722/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 11:22:06,723/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:22:06,735/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:22:09,515/GMT+08:00][main][INFO]Microservice exists in service center, no need to register. id=1031a8ae191011e8b486286ed488d110 appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2018-02-24 11:22:09,528/GMT+08:00][main][INFO]SchemaIds is equals to service center. id=1031a8ae191011e8b486286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2018-02-24 11:22:09,534/GMT+08:00][main][INFO]schemaId catalogue exists true io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 11:22:09,538/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:22:09,539/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 11:22:09,563/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=1031a8ae191011e8b486286ed488d110 instanceId=103e6391191011e8b486286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 11:22:09,564/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:22:09,624/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 11:22:09,625/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice 1031a8ae191011e8b486286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 11:22:39,765/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 11:26:26,503/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher handle microservice 1031a8ae191011e8b486286ed488d110 response failed, watcher catch an err: server shutdown io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:493)
[2018-02-24 11:26:26,507/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, connection is closed accidentally io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:26:26,509/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :connection is closed accidentally io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:26:26,510/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]ws close error. io.servicecomb.serviceregistry.client.http.WebsocketUtils.lambda$null$1(WebsocketUtils.java:64)
java.lang.IllegalStateException: WebSocket is closed
	at io.vertx.core.http.impl.WebSocketImplBase.checkClosed(WebSocketImplBase.java:253)
	at io.vertx.core.http.impl.WebSocketImplBase.close(WebSocketImplBase.java:99)
	at io.servicecomb.serviceregistry.client.http.WebsocketUtils.lambda$null$1(WebsocketUtils.java:62)
	at io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:344)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:418)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:440)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.Thread.run(Thread.java:748)
[2018-02-24 11:26:41,186/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:26:41,186/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:26:41,187/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:26:41,189/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:26:41,189/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:26:42,191/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:26:42,192/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:26:42,194/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:26:42,195/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:26:42,195/GMT+08:00][Service Center Task][WARN]sc task taken more than 2015ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:27:10,225/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:27:11,226/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:11,227/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:27:11,228/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:27:12,233/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:13,255/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:13,256/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:27:13,257/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:27:14,261/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:14,262/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:27:14,264/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:27:15,266/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:15,267/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:27:15,268/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:27:15,268/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:27:15,270/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:27:16,272/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:16,273/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:27:16,275/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:27:16,276/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:27:16,277/GMT+08:00][Service Center Task][WARN]sc task taken more than 6052ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:27:40,320/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:27:41,335/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:41,336/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:27:41,337/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:27:42,346/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:43,356/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:43,357/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:27:43,358/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:27:44,373/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:44,374/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:27:44,376/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:27:45,381/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:27:45,381/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:45,382/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:27:45,383/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:27:45,385/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:27:46,388/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:27:46,390/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:27:46,391/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:27:46,392/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:27:46,393/GMT+08:00][Service Center Task][WARN]sc task taken more than 6073ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:28:10,409/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:28:11,416/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:11,418/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:28:11,419/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:28:12,421/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:13,427/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:13,428/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:28:13,429/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:28:14,437/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:14,439/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:28:14,440/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:28:15,440/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:15,442/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:28:15,443/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:28:15,444/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:28:15,445/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:28:16,450/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:16,452/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:28:16,453/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:28:16,454/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:28:16,455/GMT+08:00][Service Center Task][WARN]sc task taken more than 6046ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:28:40,502/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:28:41,504/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:41,506/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:28:41,507/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:28:42,516/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:43,533/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:43,535/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:28:43,536/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:28:44,534/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:44,535/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:28:44,537/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:28:45,538/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:28:45,540/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:28:45,543/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:45,544/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:28:45,545/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:28:46,549/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:28:46,550/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:28:46,552/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:28:46,553/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:28:46,554/GMT+08:00][Service Center Task][WARN]sc task taken more than 6052ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:29:10,600/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:29:11,608/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:11,609/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:29:11,609/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:29:12,621/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:13,628/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:13,629/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:29:13,629/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:29:14,632/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:14,633/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:29:14,633/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:29:15,633/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:29:15,634/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:29:15,638/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:15,638/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:29:15,638/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:29:16,637/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:16,638/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:29:16,638/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:29:16,639/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:29:16,639/GMT+08:00][Service Center Task][WARN]sc task taken more than 6039ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:29:40,717/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:29:41,737/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:41,737/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:29:41,737/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:29:42,772/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:43,807/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:43,807/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:29:43,807/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:29:44,826/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:44,826/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:29:44,826/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:29:45,831/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:45,831/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:29:45,831/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:29:45,847/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:29:45,847/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:29:46,866/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:29:46,866/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:29:46,866/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:29:46,866/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:29:46,866/GMT+08:00][Service Center Task][WARN]sc task taken more than 6149ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:30:10,773/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:30:11,808/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:11,808/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:30:11,808/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:30:12,813/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:13,833/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:13,833/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:30:13,833/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:30:14,853/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:14,853/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:30:14,853/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:30:15,857/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:30:15,857/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:30:15,872/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:15,872/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:30:15,872/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:30:16,892/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:16,892/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:30:16,892/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:30:16,892/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:30:16,892/GMT+08:00][Service Center Task][WARN]sc task taken more than 6119ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:30:40,777/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:30:41,766/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:41,766/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:30:41,766/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:30:42,786/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:43,774/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:43,774/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:30:43,774/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:30:44,778/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:44,778/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:30:44,778/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:30:45,781/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:45,781/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:30:45,781/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:30:45,812/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:30:45,812/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:30:46,784/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:30:46,784/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:30:46,784/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:30:46,784/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:30:46,784/GMT+08:00][Service Center Task][WARN]sc task taken more than 6007ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:31:10,559/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:31:11,547/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:11,547/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:31:11,547/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:31:12,567/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:13,617/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:13,617/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:31:13,617/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:31:14,651/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:14,651/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:31:14,651/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:31:15,685/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:31:15,685/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:15,685/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:31:15,685/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:31:15,685/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:31:16,704/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:16,704/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:31:16,704/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:31:16,704/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:31:16,704/GMT+08:00][Service Center Task][WARN]sc task taken more than 6145ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:31:40,591/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:31:41,625/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:41,625/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:31:41,625/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:31:42,644/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:43,649/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:43,664/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:31:43,664/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:31:44,683/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:44,683/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:31:44,683/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:31:45,701/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:31:45,701/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:45,701/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:31:45,701/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:31:45,701/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:31:46,736/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:31:46,736/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:31:46,736/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:31:46,736/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:31:46,736/GMT+08:00][Service Center Task][WARN]sc task taken more than 6145ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:32:10,277/GMT+08:00][Service Center Task][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:32:11,280/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:32:11,280/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:32:11,280/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:32:12,298/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=sockshop&type=microservice&serviceName=catalogue&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:32:13,333/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:32:13,333/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:32:13,333/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:32:14,351/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:32:14,351/GMT+08:00][Service Center Task][ERROR]Registry microservice failed. appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2018-02-24 11:32:14,351/GMT+08:00][Service Center Task][INFO]read MicroserviceRegisterTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:32:15,370/GMT+08:00][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1031a8ae191011e8b486286ed488d110, Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:552)
[2018-02-24 11:32:15,370/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-02-24 11:32:15,386/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:32:15,386/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat] failed, retry. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:80)
[2018-02-24 11:32:15,386/GMT+08:00][registry-vert.x-eventloop-thread-0][INFO]Using next service center address 127.0.0.1:30100. io.servicecomb.serviceregistry.client.IpPortManager.returnWithLog(IpPortManager.java:96)
[2018-02-24 11:32:16,390/GMT+08:00][registry-vert.x-eventloop-thread-0][ERROR]PUT /v4/default/registry/microservices/1031a8ae191011e8b486286ed488d110/instances/103e6391191011e8b486286ed488d110/heartbeat fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:84)
[2018-02-24 11:32:16,405/GMT+08:00][Service Center Task][ERROR]Disconnected from service center and heartbeat failed for microservice instance=1031a8ae191011e8b486286ed488d110/103e6391191011e8b486286ed488d110 io.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:70)
[2018-02-24 11:32:16,405/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-02-24 11:32:16,405/GMT+08:00][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY io.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-02-24 11:32:16,405/GMT+08:00][Service Center Task][WARN]sc task taken more than 6128ms to execute io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:50)
[2018-02-24 11:34:31,870/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 11:34:31,938/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19dfb72a: startup date [Sat Feb 24 11:34:31 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 11:34:32,039/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:32,479/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/handler-bizkeeper/0.5.0/handler-bizkeeper-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:32,506/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:32,972/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:32,987/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:33,007/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:33,019/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:33,031/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 11:34:33,480/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 11:34:33,481/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 11:34:33,492/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 11:34:33,606/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 11:34:33,607/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 11:34:33,623/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 11:34:34,280/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 11:34:34,648/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:34:34,649/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 11:34:35,213/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:34:35,319/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 11:34:35,341/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 11:34:35,379/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 11:34:35,483/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 11:34:35,641/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 11:34:36,302/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 11:34:36,389/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 11:34:36,390/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 11:34:36,399/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 11:34:36,400/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 11:34:36,425/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 11:34:36,432/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 11:34:36,480/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 11:34:36,487/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 11:34:37,189/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 11:34:37,213/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 11:34:37,222/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 11:34:37,223/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 11:34:37,225/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 11:34:37,238/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 11:34:37,547/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]{"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"Service does not exist."}
 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:112)
[2018-02-24 11:34:37,571/GMT+08:00][main][INFO]Registry Microservice successfully. id=a3aa1f98191311e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:89)
[2018-02-24 11:34:37,575/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]{"errorCode":"400016","errorMessage":"Schema does not exist","detail":"Schema does not exist."}
 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:112)
[2018-02-24 11:34:37,576/GMT+08:00][main][INFO]schemaId catalogue exists false io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 11:34:37,584/GMT+08:00][main][INFO]register schema a3aa1f98191311e8929c286ed488d110/catalogue success. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:256)
[2018-02-24 11:34:37,587/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:34:37,588/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 11:34:37,607/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=a3aa1f98191311e8929c286ed488d110 instanceId=a3aee7d8191311e8929c286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 11:34:37,608/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 11:34:37,654/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 11:34:37,655/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice a3aa1f98191311e8929c286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 11:35:07,705/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 14:55:01,064/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 14:55:01,130/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@30c7da1e: startup date [Sat Feb 24 14:55:01 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 14:55:01,242/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:01,821/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:02,561/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:02,577/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:02,594/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:02,607/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:02,618/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:03,018/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 14:55:03,019/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 14:55:03,031/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 14:55:03,131/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 14:55:03,132/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 14:55:03,149/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 14:55:03,726/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 14:55:03,923/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 14:55:03,924/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 14:55:04,550/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 14:55:04,655/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 14:55:04,761/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 14:55:04,804/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 14:55:04,907/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 14:55:05,058/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 14:55:05,815/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 14:55:05,906/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 14:55:05,908/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 14:55:05,917/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 14:55:05,918/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 14:55:05,944/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 14:55:05,951/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 14:55:05,998/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 14:55:06,007/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 14:55:06,640/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 14:55:06,663/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 14:55:06,671/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 14:55:06,672/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 14:55:06,673/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 14:55:06,683/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 14:55:07,106/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]{"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"Service does not exist."}
 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:112)
[2018-02-24 14:55:07,222/GMT+08:00][main][INFO]Registry Microservice successfully. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:89)
[2018-02-24 14:55:07,226/GMT+08:00][registry-vert.x-eventloop-thread-0][WARN]{"errorCode":"400016","errorMessage":"Schema does not exist","detail":"Schema does not exist."}
 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:112)
[2018-02-24 14:55:07,227/GMT+08:00][main][INFO]schemaId catalogue exists false io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 14:55:07,243/GMT+08:00][main][INFO]register schema a5da075f192f11e8929c286ed488d110/catalogue success. io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:256)
[2018-02-24 14:55:07,245/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 14:55:07,247/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 14:55:07,276/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=a5da075f192f11e8929c286ed488d110 instanceId=a5ec8bf3192f11e8929c286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 14:55:07,277/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 14:55:07,335/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 14:55:07,337/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice a5da075f192f11e8929c286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 14:55:37,296/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 14:55:37,348/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@30c7da1e: startup date [Sat Feb 24 14:55:37 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 14:55:37,453/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:37,743/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:38,229/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:38,254/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:38,266/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:38,277/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:38,288/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 14:55:38,731/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 14:55:38,733/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 14:55:38,741/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 14:55:38,819/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 14:55:38,820/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 14:55:38,838/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 14:55:39,240/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 14:55:39,400/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 14:55:39,402/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 14:55:39,856/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 14:55:39,940/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 14:55:39,954/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 14:55:39,985/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 14:55:40,049/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 14:55:40,139/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 14:55:40,542/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 14:55:40,619/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 14:55:40,620/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 14:55:40,629/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 14:55:40,630/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 14:55:40,647/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 14:55:40,651/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 14:55:40,684/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 14:55:40,690/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 14:55:41,119/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 14:55:41,137/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 14:55:41,146/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 14:55:41,148/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 14:55:41,149/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 14:55:41,161/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 14:55:41,431/GMT+08:00][main][INFO]Microservice exists in service center, no need to register. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2018-02-24 14:55:41,445/GMT+08:00][main][INFO]SchemaIds is equals to service center. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2018-02-24 14:55:41,449/GMT+08:00][main][INFO]schemaId catalogue exists true io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 14:55:41,450/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 14:55:41,451/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 14:55:41,468/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=a5da075f192f11e8929c286ed488d110 instanceId=a5ec8bf3192f11e8929c286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 14:55:41,469/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 14:55:41,510/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 14:55:41,512/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice a5da075f192f11e8929c286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 14:56:11,549/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 15:01:45,798/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 15:01:45,860/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@30c7da1e: startup date [Sat Feb 24 15:01:45 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 15:01:45,949/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:01:59,527/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 15:01:59,579/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@30c7da1e: startup date [Sat Feb 24 15:01:59 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 15:01:59,681/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:26,452/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 15:40:26,548/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@30c7da1e: startup date [Sat Feb 24 15:40:26 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 15:40:26,684/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:27,227/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:27,723/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:27,744/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:27,776/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:27,792/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:27,805/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 15:40:28,286/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 15:40:28,287/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 15:40:28,302/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 15:40:28,397/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 15:40:28,399/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 15:40:28,414/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 15:40:29,028/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 15:40:29,254/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 15:40:29,255/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 15:40:29,973/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 15:40:30,089/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 15:40:30,181/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 15:40:30,221/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 15:40:30,334/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 15:40:30,475/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 15:40:31,133/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 15:40:31,198/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 15:40:31,200/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 15:40:31,209/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 15:40:31,210/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 15:40:31,231/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 15:40:31,243/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 15:40:31,291/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 15:40:31,305/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 15:40:32,046/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 15:40:32,067/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 15:40:32,075/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 15:40:32,077/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.lang.String cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 15:40:32,079/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 15:40:32,092/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 15:40:32,503/GMT+08:00][main][INFO]Microservice exists in service center, no need to register. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2018-02-24 15:40:32,538/GMT+08:00][main][INFO]SchemaIds is equals to service center. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2018-02-24 15:40:32,553/GMT+08:00][main][INFO]schemaId catalogue exists true io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 15:40:32,557/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 15:40:32,557/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 15:40:32,721/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=a5da075f192f11e8929c286ed488d110 instanceId=fe5b12a3193511e8929c286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 15:40:32,723/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 15:40:32,817/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 15:40:32,818/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice a5da075f192f11e8929c286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 15:41:02,862/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
[2018-02-24 16:55:48,228/GMT+08:00][main][INFO]Write merged log4j config file to C:\Users\w00402903\IdeaProjects\catalogue\target\classes\config\merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:103)
[2018-02-24 16:55:48,326/GMT+08:00][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@30c7da1e: startup date [Sat Feb 24 16:55:48 GMT+08:00 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-02-24 16:55:48,456/GMT+08:00][main][INFO]Loading XML bean definitions from file [C:\Users\w00402903\IdeaProjects\catalogue\target\classes\META-INF\spring\catalogue.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:48,982/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/java-chassis-core/0.5.0/java-chassis-core-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:49,431/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-config/0.5.0/foundation-config-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:49,448/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-metrics/0.5.0/foundation-metrics-0.5.0.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:49,463/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-common/0.5.0/foundation-common-0.5.0.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:49,475/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/transport-rest-client/0.5.0/transport-rest-client-0.5.0.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:49,488/GMT+08:00][main][INFO]Loading XML bean definitions from URL [jar:file:/C:/Users/w00402903/.m2/repository/io/servicecomb/foundation-vertx/0.5.0/foundation-vertx-0.5.0.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-02-24 16:55:49,923/GMT+08:00][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-02-24 16:55:49,925/GMT+08:00][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-02-24 16:55:49,936/GMT+08:00][main][INFO]create dynamic config: io.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:156)
[2018-02-24 16:55:50,091/GMT+08:00][main][INFO]create local config: io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:88)
[2018-02-24 16:55:50,093/GMT+08:00][main][INFO] file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml. io.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:90)
[2018-02-24 16:55:50,111/GMT+08:00][main][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:139)
[2018-02-24 16:55:50,882/GMT+08:00][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-02-24 16:55:51,093/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 16:55:51,094/GMT+08:00][main][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-02-24 16:55:51,770/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 16:55:51,900/GMT+08:00][main][INFO]add network interface name:eth3,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:113)
[2018-02-24 16:55:51,976/GMT+08:00][main][INFO]add host name from localhost:szxbz1498,host address:10.229.33.117 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:71)
[2018-02-24 16:55:52,029/GMT+08:00][main][INFO]load microservice config, name=catalogue, paths=[file:/C:/Users/w00402903/IdeaProjects/catalogue/target/classes/microservice.yaml] io.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-02-24 16:55:52,156/GMT+08:00][main][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-02-24 16:55:52,329/GMT+08:00][main][INFO]executor group 2, thread per group 4. io.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:53)
[2018-02-24 16:55:53,099/GMT+08:00][main][INFO]generate cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf in classLoader sun.misc.Launcher$AppClassLoader@18b4aac2. io.servicecomb.common.javassist.JavassistUtils.createClass(JavassistUtils.java:181)
[2018-02-24 16:55:53,190/GMT+08:00][main][INFO]generate swagger for sockshop/catalogue/catalogue, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.sockshop.api.CatalogueController"
  x-java-interface: "cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf"
basePath: "/catalogue"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      operationId: "getCatalogues"
      parameters: []
      responses:
        200:
          description: "response of 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalogue"
definitions:
  Catalogue:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int32"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    x-java-class: "io.servicecomb.sockshop.model.Catalogue"
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      url:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Image"
  Tag:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      display:
        type: "string"
      catalogueId:
        type: "string"
    x-java-class: "io.servicecomb.sockshop.model.Tag"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:104)
[2018-02-24 16:55:53,191/GMT+08:00][main][INFO]register schema sockshop/catalogue/catalogue io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:90)
[2018-02-24 16:55:53,200/GMT+08:00][main][INFO]found DiscoveryFilter: io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:54)
[2018-02-24 16:55:53,201/GMT+08:00][main][INFO]DiscoveryFilter io.servicecomb.core.filter.EndpointDiscoveryFilter. io.servicecomb.serviceregistry.discovery.DiscoveryTree.sort(DiscoveryTree.java:56)
[2018-02-24 16:55:53,230/GMT+08:00][main][WARN]address /0.0.0.0:7071, auto select a host address to publish 10.229.33.117:7071, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:171)
[2018-02-24 16:55:53,236/GMT+08:00][main][INFO]choose io.servicecomb.transport.rest.vertx.VertxRestTransport for rest. io.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:85)
[2018-02-24 16:55:53,286/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]init vertx http dispatcher io.servicecomb.transport.rest.vertx.VertxRestDispatcher io.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:85)
[2018-02-24 16:55:53,296/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]set uploads directory to null. io.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:48)
[2018-02-24 16:55:54,021/GMT+08:00][transport-vert.x-eventloop-thread-0][INFO]rest listen success. address=0.0.0.0:7071 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:93)
[2018-02-24 16:55:54,046/GMT+08:00][main][INFO]endpoint to publish: rest://10.229.33.117:7071 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:57)
[2018-02-24 16:55:54,055/GMT+08:00][main][INFO]add schema to service paths. sockshop:catalogue:catalogue. io.servicecomb.common.rest.locator.ServicePathManager.addSchema(ServicePathManager.java:91)
[2018-02-24 16:55:54,057/GMT+08:00][main][INFO]Swagger mapped "{[/catalogue/], method=[GET], produces=[application/json]}" onto public abstract java.util.List cse.gen.sockshop.catalogue.catalogue.CatalogueControllerIntf.getCatalogues() io.servicecomb.common.rest.locator.MicroservicePaths.printPath(MicroservicePaths.java:103)
[2018-02-24 16:55:54,058/GMT+08:00][main][INFO]running microservice register task. io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-02-24 16:55:54,069/GMT+08:00][main][INFO]Using the default address resolver as the dns resolver could not be loaded io.vertx.core.spi.resolver.ResolverProvider.factory(ResolverProvider.java:51)
[2018-02-24 16:55:54,465/GMT+08:00][main][INFO]Microservice exists in service center, no need to register. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1 io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2018-02-24 16:55:54,499/GMT+08:00][main][INFO]SchemaIds is equals to service center. id=a5da075f192f11e8929c286ed488d110 appId=sockshop, name=catalogue, version=0.0.1, schemaIds=[catalogue] io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2018-02-24 16:55:54,509/GMT+08:00][main][INFO]schemaId catalogue exists true io.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:143)
[2018-02-24 16:55:54,512/GMT+08:00][main][INFO]read MicroserviceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 16:55:54,513/GMT+08:00][main][INFO]running microservice instance register task. io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-02-24 16:55:54,615/GMT+08:00][main][INFO]Register microservice instance success. microserviceId=a5da075f192f11e8929c286ed488d110 instanceId=85a3789d194011e8929c286ed488d110 endpoints=[rest://10.229.33.117:7071] lease 120s io.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-02-24 16:55:54,617/GMT+08:00][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED io.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-02-24 16:55:54,684/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]Reconnected to service center, clean up the provider's microservice instances cache. io.servicecomb.serviceregistry.cache.InstanceCacheManagerOld.onRecovered(InstanceCacheManagerOld.java:194)
[2018-02-24 16:55:54,685/GMT+08:00][registry-vert.x-eventloop-thread-2][INFO]watching microservice a5da075f192f11e8929c286ed488d110 successfully, the chosen service center address is 127.0.0.1:30100 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$6(ServiceRegistryClientImpl.java:476)
[2018-02-24 16:56:24,703/GMT+08:00][Service Center Task][WARN]sc task interval changed from -1 to 30 io.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:38)
